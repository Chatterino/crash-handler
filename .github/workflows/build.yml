name: Build

on:
  push:
    branches:
      - main
      - "release/*"
  pull_request:
  workflow_dispatch:
  merge_group:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build on ${{ matrix.os }} with ${{matrix.compiler}}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        compiler: [cl, clang-cl]

      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Enable Developer Command Prompt (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: Install LLVM and Clang
        if: startsWith(matrix.os, 'windows') && matrix.compiler == 'clang-cl'
        uses: KyleMayes/install-llvm-action@v2.0.6
        with:
          version: 19
          env: true

      - name: Build (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          cmake -G Ninja -B build -DCMAKE_BUILD_TYPE=Release
          ninja -C build

      - name: Upload artifact (Windows)
        if: startsWith(matrix.os, 'windows') && matrix.compiler == 'cl'
        uses: actions/upload-artifact@v4
        with:
          name: crashpad-handler.exe
          path: build/bin/crashpad/crashpad-handler.exe

  check-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    outputs:
      IS_TAGGED: ${{ steps.is-rel.outputs.IS_TAGGED }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # we need the tags
      - name: Check Release
        id: is-rel
        run: |
          set +e;
          git describe --exact-match --match 'v*' &> /dev/null;
          echo "IS_TAGGED=$?" >> "$GITHUB_OUTPUT";
        shell: bash

  draft-release:
    runs-on: ubuntu-latest
    needs: [build, check-release]
    if: ${{ needs.check-release.outputs.IS_TAGGED == '0' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # we need the tags

      - uses: actions/download-artifact@v4
        with:
          name: crashpad-handler.exe
          path: build/

      - name: Get Tag
        id: get-tag
        run: echo "VALUE=$(git describe --exact-match --match 'v*')" >> "$GITHUB_OUTPUT"

      - name: Create release
        uses: ncipollo/release-action@v1.16.0
        with:
          replacesArtifacts: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          draft: true
          artifacts: "build/*"
          name: ${{ steps.get-tag.outputs.VALUE }}
          tag: ${{ steps.get-tag.outputs.VALUE }}
